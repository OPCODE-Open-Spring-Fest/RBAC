{
  "openapi": "3.0.0",
  "info": {
    "title": "RBAC API Documentation",
    "version": "1.0.0",
    "description": "Open Source Hackathon (Opcode) project â€” Role-Based Access Control (RBAC) backend API documentation.\n\nThis documentation provides details of all available API endpoints, authentication methods, and data models used in the RBAC system.",
    "contact": {
      "name": "Mukesh Dhadhariya",
      "email": "mukeshdhadhariya1@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Local development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "description": "Authenticate a user with email and password and return JWT token along with refresh token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "mukesh@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "yourpassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "refreshToken": {
                      "type": "string",
                      "example": "d1f2e3c4-5678-90ab-cdef-1234567890ab"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing email or password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Email and password are required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed (invalid credentials)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Check if the API is working",
        "description": "Simple health check endpoint to verify API is up and running.",
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "API is working good"
                    },
                    "status": {
                      "type": "intger",
                      "example": 200
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Register a new user",
        "description": "Create a new user account with username, email, fullname, password, and optional role.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "email",
                  "fullname",
                  "password"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "mukesh dhadhariya"
                  },
                  "email": {
                    "type": "string",
                    "example": "mukeshdhadhariya1@gmail.com"
                  },
                  "fullname": {
                    "type": "string",
                    "example": "Mukesh Dhadhariya"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  },
                  "role": {
                    "type": "string",
                    "description": "Optional Role ID reference",
                    "example": "64f3c2a7e1f0b2a7b1c0d123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User registered successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (missing fields or username/email already exists)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "All fields (username, email, fullname, password) are required"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Registration failed due to server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Registration failed"
                    },
                    "error": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": []
}
